pipeline {
    agent any
    tools {
        maven 'mvn'
    }
    stages {
        stage('Unit Tests - JUnit and JaCoCo') {
            steps {
                sh "mvn test"
            }
            post {
                always{
                    jacoco execPattern: 'target/jacoco.exec'
                }
            } 
        }
        stage('Mutations Tests - PIT') {
            steps {
                sh "mvn org.pitest:pitest-maven:mutationCoverage"
            }
            post {
                always{
                    pitmutation mutationStatsFile: '**/target/pit-reports/**/mutations.xml'
                }
            }
        }
        stage('Build Artifact') {
            steps {
                sh "mvn clean package -DskipTests=true"
                archive 'target/*.jar' ///higguygygygjj
            }
        }

        /*
        stage('docker') {
            steps {
                sh 'docker version'
            }
        }
        stage('Hello k8s') {
            steps {
                withKubeConfig([credentialsId: 'kubeconfig']) {
                    sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'  
                    sh 'chmod u+x ./kubectl'  
                    sh './kubectl get pods -n kube-system'
                }
            }
        }
        */

    }
}